--monitoring index usage
SELECT
	tbl.name AS TableName,
	idx.name AS IndexName,
	idx.type_desc AS IndexType,
	idx.is_primary_key AS IsPrimaryKey,
	idx.is_unique AS IsUnique,
	idx.iS_disabled AS IsDisabled,
	s.user_seeks AS Seeks,
	s.user_scans AS Scans,
	s.user_lookups AS Lookups,
	s.user_updates AS Updates,
	s.last_user_seek AS LastSeek,
	s.last_user_scan AS LastScan,
	COALESCE (s.last_user_seek,s.last_user_scan) AS Lastupdate
FROM sys.indexes idx
JOIN sys.tables tbl
ON idx.object_id = tbl.object_id
LEFT JOIN SYS.dm_db_index_usage_stats s
on s.object_id = idx.object_id
AND s.index_id = idx.index_id
order BY tbl.name, idx.name;

--Finding duplicate indexes
SELECT
	tbl.name AS TableName,
	col.name AS ColumnName,
	idx.name AS IndexName,
	idx.type_desc AS IndexType,
	COUNT(*) OVER (PARTITION BY tbl.name, col.name) AS ColumnCount
FROM sys.indexes idx
JOIN sys.tables tbl ON idx.object_id = tbl.object_id
JOIN sys.index_columns ic ON idx.object_id = ic.object_id AND idx.index_id = ic.index_id
JOIN sys.columns col ON ic.object_id = col.object_id AND ic.column_id = col.column_id
ORDER BY tbl.name, col.name, idx.name;

--Fragmentation
SELECT 
	tbl.name AS TableName,
	idx.name AS IndexName,
	s.avg_fragmentation_in_percent AS FragmentationPercent,
	s.page_count AS PageCount
FROM sys.dm_db_index_physical_stats (DB_ID(), NULL, NULL, NULL, 'LIMITED') AS s
INNER JOIN sys.tables AS tbl ON s.object_id = tbl.object_id
INNER JOIN sys.indexes AS idx ON idx.object_id = s.object_id AND idx.index_id = s.index_id
ORDER BY s.avg_fragmentation_in_percent DESC;

